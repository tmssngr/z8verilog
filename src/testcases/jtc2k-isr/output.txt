VCD info: dumpfile SoC.vcd opened for output.

000c: read 1st byte 31
000d: read 2nd byte 50
  31 50
    srp 50
    reg[fd] = 50

000e: read 1st byte e6
000f: read 2nd byte f8
0010: read 3rd byte 92
  e6 f8 92
    ld f8, #92
    reg[f8] = 92

0011: read 1st byte e6
0012: read 2nd byte fe
0013: read 3rd byte fe
  e6 fe fe
    ld fe, #fe
    reg[fe] = fe

0014: read 1st byte b0
0015: read 2nd byte ff
  b0 ff
    clr ff
    alu:    xx       00    =>    00
         xxxxxxxx 00000000 => 00000000
    flags = 0000_0000
    reg[ff] = 00

0016: read 1st byte 5c
0017: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

0018: read 1st byte 4c
0019: read 2nd byte 40
  4c 40
    ld r4, #40
    reg[54] = 40

001a: read 1st byte e6
001b: read 2nd byte 6d
001c: read 3rd byte 00
  e6 6d 00
    ld 6d, #00
    reg[6d] = 00

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_0000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_0000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_0000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_0000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_0000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    xx = mem[fe00]
    00 = mem[fe00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe01]
    00 = mem[fe01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe02]
    00 = mem[fe02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe03]
    00 = mem[fe03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe04]
    00 = mem[fe04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe05]
    00 = mem[fe05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe06]
    00 = mem[fe06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe07]
    00 = mem[fe07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_0000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    08       08    =>    00
         00001000 00001000 => 00000000
    flags = 0100_1000
    reg[ff] = 00
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe00]
    00 = mem[fe00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe01]
    00 = mem[fe01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe02]
    00 = mem[fe02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe03]
    00 = mem[fe03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe04]
    00 = mem[fe04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe05]
    00 = mem[fe05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe06]
    00 = mem[fe06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe07]
    00 = mem[fe07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    08       08    =>    00
         00001000 00001000 => 00000000
    flags = 0100_1000
    reg[ff] = 00
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe00]
    00 = mem[fe00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe01]
    00 = mem[fe01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe02]
    00 = mem[fe02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe03]
    00 = mem[fe03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe04]
    00 = mem[fe04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe05]
    00 = mem[fe05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe06]
    00 = mem[fe06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe07]
    00 = mem[fe07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3f

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe08]
    00 = mem[fe08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe09]
    00 = mem[fe09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0a]
    00 = mem[fe0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0b]
    00 = mem[fe0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0c]
    00 = mem[fe0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0d]
    00 = mem[fe0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0e]
    00 = mem[fe0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0f]
    00 = mem[fe0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    10       08    =>    08
         00010000 00001000 => 00001000
    flags = 0000_1100
    reg[ff] = 08
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe08]
    00 = mem[fe08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe09]
    00 = mem[fe09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0a]
    00 = mem[fe0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0b]
    00 = mem[fe0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0c]
    00 = mem[fe0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0d]
    00 = mem[fe0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0e]
    00 = mem[fe0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0f]
    00 = mem[fe0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    10       08    =>    08
         00010000 00001000 => 00001000
    flags = 0000_1100
    reg[ff] = 08
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe08]
    00 = mem[fe08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe09]
    00 = mem[fe09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0a]
    00 = mem[fe0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0b]
    00 = mem[fe0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0c]
    00 = mem[fe0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0d]
    00 = mem[fe0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0e]
    00 = mem[fe0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe0f]
    00 = mem[fe0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3e

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe10]
    00 = mem[fe10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe11]
    00 = mem[fe11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe12]
    00 = mem[fe12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe13]
    00 = mem[fe13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe14]
    00 = mem[fe14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe15]
    00 = mem[fe15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe16]
    00 = mem[fe16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe17]
    00 = mem[fe17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    18       08    =>    10
         00011000 00001000 => 00010000
    flags = 0000_1000
    reg[ff] = 10
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe10]
    00 = mem[fe10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe11]
    00 = mem[fe11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe12]
    00 = mem[fe12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe13]
    00 = mem[fe13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe14]
    00 = mem[fe14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe15]
    00 = mem[fe15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe16]
    00 = mem[fe16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe17]
    00 = mem[fe17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    18       08    =>    10
         00011000 00001000 => 00010000
    flags = 0000_1000
    reg[ff] = 10
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe10]
    00 = mem[fe10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe11]
    00 = mem[fe11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe12]
    00 = mem[fe12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe13]
    00 = mem[fe13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe14]
    00 = mem[fe14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe15]
    00 = mem[fe15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe16]
    00 = mem[fe16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe17]
    00 = mem[fe17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3d

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe18]
    00 = mem[fe18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe19]
    00 = mem[fe19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1a]
    00 = mem[fe1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1b]
    00 = mem[fe1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1c]
    00 = mem[fe1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1d]
    00 = mem[fe1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1e]
    00 = mem[fe1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1f]
    00 = mem[fe1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    20       08    =>    18
         00100000 00001000 => 00011000
    flags = 0000_1100
    reg[ff] = 18
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe18]
    00 = mem[fe18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe19]
    00 = mem[fe19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1a]
    00 = mem[fe1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1b]
    00 = mem[fe1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1c]
    00 = mem[fe1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1d]
    00 = mem[fe1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1e]
    00 = mem[fe1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1f]
    00 = mem[fe1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    20       08    =>    18
         00100000 00001000 => 00011000
    flags = 0000_1100
    reg[ff] = 18
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe18]
    00 = mem[fe18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe19]
    00 = mem[fe19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1a]
    00 = mem[fe1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1b]
    00 = mem[fe1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1c]
    00 = mem[fe1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1d]
    00 = mem[fe1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1e]
    00 = mem[fe1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe1f]
    00 = mem[fe1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3c

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe20]
    00 = mem[fe20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe21]
    00 = mem[fe21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe22]
    00 = mem[fe22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe23]
    00 = mem[fe23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe24]
    00 = mem[fe24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe25]
    00 = mem[fe25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe26]
    00 = mem[fe26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe27]
    00 = mem[fe27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    28       08    =>    20
         00101000 00001000 => 00100000
    flags = 0000_1000
    reg[ff] = 20
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe20]
    00 = mem[fe20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe21]
    00 = mem[fe21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe22]
    00 = mem[fe22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe23]
    00 = mem[fe23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe24]
    00 = mem[fe24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe25]
    00 = mem[fe25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe26]
    00 = mem[fe26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe27]
    00 = mem[fe27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    28       08    =>    20
         00101000 00001000 => 00100000
    flags = 0000_1000
    reg[ff] = 20
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe20]
    00 = mem[fe20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe21]
    00 = mem[fe21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe22]
    00 = mem[fe22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe23]
    00 = mem[fe23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe24]
    00 = mem[fe24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe25]
    00 = mem[fe25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe26]
    00 = mem[fe26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe27]
    00 = mem[fe27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3b

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe28]
    00 = mem[fe28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe29]
    00 = mem[fe29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2a]
    00 = mem[fe2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2b]
    00 = mem[fe2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2c]
    00 = mem[fe2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2d]
    00 = mem[fe2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2e]
    00 = mem[fe2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2f]
    00 = mem[fe2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    30       08    =>    28
         00110000 00001000 => 00101000
    flags = 0000_1100
    reg[ff] = 28
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe28]
    00 = mem[fe28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe29]
    00 = mem[fe29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2a]
    00 = mem[fe2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2b]
    00 = mem[fe2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2c]
    00 = mem[fe2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2d]
    00 = mem[fe2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2e]
    00 = mem[fe2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2f]
    00 = mem[fe2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    30       08    =>    28
         00110000 00001000 => 00101000
    flags = 0000_1100
    reg[ff] = 28
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe28]
    00 = mem[fe28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe29]
    00 = mem[fe29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2a]
    00 = mem[fe2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2b]
    00 = mem[fe2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2c]
    00 = mem[fe2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2d]
    00 = mem[fe2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2e]
    00 = mem[fe2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe2f]
    00 = mem[fe2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 3a

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe30]
    00 = mem[fe30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe31]
    00 = mem[fe31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe32]
    00 = mem[fe32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe33]
    00 = mem[fe33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe34]
    00 = mem[fe34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe35]
    00 = mem[fe35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe36]
    00 = mem[fe36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe37]
    00 = mem[fe37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    38       08    =>    30
         00111000 00001000 => 00110000
    flags = 0000_1000
    reg[ff] = 30
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe30]
    00 = mem[fe30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe31]
    00 = mem[fe31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe32]
    00 = mem[fe32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe33]
    00 = mem[fe33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe34]
    00 = mem[fe34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe35]
    00 = mem[fe35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe36]
    00 = mem[fe36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe37]
    00 = mem[fe37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    38       08    =>    30
         00111000 00001000 => 00110000
    flags = 0000_1000
    reg[ff] = 30
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe30]
    00 = mem[fe30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe31]
    00 = mem[fe31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe32]
    00 = mem[fe32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe33]
    00 = mem[fe33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe34]
    00 = mem[fe34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe35]
    00 = mem[fe35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe36]
    00 = mem[fe36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe37]
    00 = mem[fe37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 39

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe38]
    00 = mem[fe38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe39]
    00 = mem[fe39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3a]
    00 = mem[fe3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3b]
    00 = mem[fe3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3c]
    00 = mem[fe3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3d]
    00 = mem[fe3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3e]
    00 = mem[fe3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3f]
    00 = mem[fe3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    40       08    =>    38
         01000000 00001000 => 00111000
    flags = 0000_1100
    reg[ff] = 38
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe38]
    00 = mem[fe38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe39]
    00 = mem[fe39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3a]
    00 = mem[fe3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3b]
    00 = mem[fe3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3c]
    00 = mem[fe3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3d]
    00 = mem[fe3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3e]
    00 = mem[fe3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3f]
    00 = mem[fe3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    40       08    =>    38
         01000000 00001000 => 00111000
    flags = 0000_1100
    reg[ff] = 38
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe38]
    00 = mem[fe38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe39]
    00 = mem[fe39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3a]
    00 = mem[fe3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3b]
    00 = mem[fe3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3c]
    00 = mem[fe3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3d]
    00 = mem[fe3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3e]
    00 = mem[fe3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe3f]
    00 = mem[fe3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 38

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe40]
    00 = mem[fe40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe41]
    00 = mem[fe41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe42]
    00 = mem[fe42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe43]
    00 = mem[fe43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe44]
    00 = mem[fe44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe45]
    00 = mem[fe45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe46]
    00 = mem[fe46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe47]
    00 = mem[fe47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    48       08    =>    40
         01001000 00001000 => 01000000
    flags = 0000_1000
    reg[ff] = 40
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe40]
    00 = mem[fe40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe41]
    00 = mem[fe41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe42]
    00 = mem[fe42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe43]
    00 = mem[fe43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe44]
    00 = mem[fe44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe45]
    00 = mem[fe45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe46]
    00 = mem[fe46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe47]
    00 = mem[fe47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    48       08    =>    40
         01001000 00001000 => 01000000
    flags = 0000_1000
    reg[ff] = 40
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe40]
    00 = mem[fe40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe41]
    00 = mem[fe41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe42]
    00 = mem[fe42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe43]
    00 = mem[fe43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe44]
    00 = mem[fe44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe45]
    00 = mem[fe45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe46]
    00 = mem[fe46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe47]
    00 = mem[fe47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 37

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe48]
    00 = mem[fe48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe49]
    00 = mem[fe49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4a]
    00 = mem[fe4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4b]
    00 = mem[fe4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4c]
    00 = mem[fe4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4d]
    00 = mem[fe4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4e]
    00 = mem[fe4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4f]
    00 = mem[fe4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    50       08    =>    48
         01010000 00001000 => 01001000
    flags = 0000_1100
    reg[ff] = 48
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe48]
    00 = mem[fe48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe49]
    00 = mem[fe49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4a]
    00 = mem[fe4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4b]
    00 = mem[fe4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4c]
    00 = mem[fe4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4d]
    00 = mem[fe4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4e]
    00 = mem[fe4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4f]
    00 = mem[fe4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    50       08    =>    48
         01010000 00001000 => 01001000
    flags = 0000_1100
    reg[ff] = 48
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe48]
    00 = mem[fe48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe49]
    00 = mem[fe49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4a]
    00 = mem[fe4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4b]
    00 = mem[fe4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4c]
    00 = mem[fe4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4d]
    00 = mem[fe4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4e]
    00 = mem[fe4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe4f]
    00 = mem[fe4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 36

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe50]
    00 = mem[fe50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe51]
    00 = mem[fe51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe52]
    00 = mem[fe52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe53]
    00 = mem[fe53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe54]
    00 = mem[fe54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe55]
    00 = mem[fe55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe56]
    00 = mem[fe56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe57]
    00 = mem[fe57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    58       08    =>    50
         01011000 00001000 => 01010000
    flags = 0000_1000
    reg[ff] = 50
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe50]
    00 = mem[fe50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe51]
    00 = mem[fe51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe52]
    00 = mem[fe52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe53]
    00 = mem[fe53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe54]
    00 = mem[fe54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe55]
    00 = mem[fe55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe56]
    00 = mem[fe56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe57]
    00 = mem[fe57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    58       08    =>    50
         01011000 00001000 => 01010000
    flags = 0000_1000
    reg[ff] = 50
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe50]
    00 = mem[fe50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe51]
    00 = mem[fe51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe52]
    00 = mem[fe52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe53]
    00 = mem[fe53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe54]
    00 = mem[fe54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe55]
    00 = mem[fe55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe56]
    00 = mem[fe56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe57]
    00 = mem[fe57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 35

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe58]
    00 = mem[fe58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe59]
    00 = mem[fe59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5a]
    00 = mem[fe5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5b]
    00 = mem[fe5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5c]
    00 = mem[fe5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5d]
    00 = mem[fe5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5e]
    00 = mem[fe5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5f]
    00 = mem[fe5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    60       08    =>    58
         01100000 00001000 => 01011000
    flags = 0000_1100
    reg[ff] = 58
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe58]
    00 = mem[fe58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe59]
    00 = mem[fe59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5a]
    00 = mem[fe5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5b]
    00 = mem[fe5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5c]
    00 = mem[fe5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5d]
    00 = mem[fe5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5e]
    00 = mem[fe5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5f]
    00 = mem[fe5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    60       08    =>    58
         01100000 00001000 => 01011000
    flags = 0000_1100
    reg[ff] = 58
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe58]
    00 = mem[fe58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe59]
    00 = mem[fe59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5a]
    00 = mem[fe5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5b]
    00 = mem[fe5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5c]
    00 = mem[fe5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5d]
    00 = mem[fe5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5e]
    00 = mem[fe5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe5f]
    00 = mem[fe5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 34

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe60]
    00 = mem[fe60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe61]
    00 = mem[fe61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe62]
    00 = mem[fe62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe63]
    00 = mem[fe63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe64]
    00 = mem[fe64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe65]
    00 = mem[fe65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe66]
    00 = mem[fe66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe67]
    00 = mem[fe67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    68       08    =>    60
         01101000 00001000 => 01100000
    flags = 0000_1000
    reg[ff] = 60
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe60]
    00 = mem[fe60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe61]
    00 = mem[fe61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe62]
    00 = mem[fe62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe63]
    00 = mem[fe63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe64]
    00 = mem[fe64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe65]
    00 = mem[fe65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe66]
    00 = mem[fe66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe67]
    00 = mem[fe67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    68       08    =>    60
         01101000 00001000 => 01100000
    flags = 0000_1000
    reg[ff] = 60
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe60]
    00 = mem[fe60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe61]
    00 = mem[fe61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe62]
    00 = mem[fe62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe63]
    00 = mem[fe63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe64]
    00 = mem[fe64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe65]
    00 = mem[fe65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe66]
    00 = mem[fe66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe67]
    00 = mem[fe67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 33

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe68]
    00 = mem[fe68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe69]
    00 = mem[fe69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6a]
    00 = mem[fe6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6b]
    00 = mem[fe6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6c]
    00 = mem[fe6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6d]
    00 = mem[fe6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6e]
    00 = mem[fe6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6f]
    00 = mem[fe6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    70       08    =>    68
         01110000 00001000 => 01101000
    flags = 0000_1100
    reg[ff] = 68
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe68]
    00 = mem[fe68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe69]
    00 = mem[fe69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6a]
    00 = mem[fe6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6b]
    00 = mem[fe6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6c]
    00 = mem[fe6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6d]
    00 = mem[fe6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6e]
    00 = mem[fe6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6f]
    00 = mem[fe6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    70       08    =>    68
         01110000 00001000 => 01101000
    flags = 0000_1100
    reg[ff] = 68
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe68]
    00 = mem[fe68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe69]
    00 = mem[fe69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6a]
    00 = mem[fe6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6b]
    00 = mem[fe6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6c]
    00 = mem[fe6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6d]
    00 = mem[fe6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6e]
    00 = mem[fe6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe6f]
    00 = mem[fe6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 32

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe70]
    00 = mem[fe70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe71]
    00 = mem[fe71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe72]
    00 = mem[fe72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe73]
    00 = mem[fe73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe74]
    00 = mem[fe74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe75]
    00 = mem[fe75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe76]
    00 = mem[fe76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe77]
    00 = mem[fe77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    78       08    =>    70
         01111000 00001000 => 01110000
    flags = 0000_1000
    reg[ff] = 70
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe70]
    00 = mem[fe70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe71]
    00 = mem[fe71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe72]
    00 = mem[fe72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe73]
    00 = mem[fe73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe74]
    00 = mem[fe74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe75]
    00 = mem[fe75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe76]
    00 = mem[fe76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe77]
    00 = mem[fe77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    78       08    =>    70
         01111000 00001000 => 01110000
    flags = 0000_1000
    reg[ff] = 70
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe70]
    00 = mem[fe70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe71]
    00 = mem[fe71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe72]
    00 = mem[fe72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe73]
    00 = mem[fe73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe74]
    00 = mem[fe74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe75]
    00 = mem[fe75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe76]
    00 = mem[fe76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe77]
    00 = mem[fe77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 31

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe78]
    00 = mem[fe78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe79]
    00 = mem[fe79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7a]
    00 = mem[fe7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7b]
    00 = mem[fe7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7c]
    00 = mem[fe7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7d]
    00 = mem[fe7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7e]
    00 = mem[fe7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7f]
    00 = mem[fe7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    80       08    =>    78
         10000000 00001000 => 01111000
    flags = 0000_1100
    reg[ff] = 78
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe78]
    00 = mem[fe78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe79]
    00 = mem[fe79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7a]
    00 = mem[fe7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7b]
    00 = mem[fe7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7c]
    00 = mem[fe7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7d]
    00 = mem[fe7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7e]
    00 = mem[fe7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7f]
    00 = mem[fe7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    80       08    =>    78
         10000000 00001000 => 01111000
    flags = 0000_1100
    reg[ff] = 78
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe78]
    00 = mem[fe78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe79]
    00 = mem[fe79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7a]
    00 = mem[fe7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7b]
    00 = mem[fe7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7c]
    00 = mem[fe7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7d]
    00 = mem[fe7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7e]
    00 = mem[fe7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe7f]
    00 = mem[fe7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 30

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe80]
    00 = mem[fe80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe81]
    00 = mem[fe81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe82]
    00 = mem[fe82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe83]
    00 = mem[fe83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe84]
    00 = mem[fe84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe85]
    00 = mem[fe85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe86]
    00 = mem[fe86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe87]
    00 = mem[fe87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    88       08    =>    80
         10001000 00001000 => 10000000
    flags = 0010_1000
    reg[ff] = 80
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe80]
    00 = mem[fe80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe81]
    00 = mem[fe81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe82]
    00 = mem[fe82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe83]
    00 = mem[fe83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe84]
    00 = mem[fe84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe85]
    00 = mem[fe85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe86]
    00 = mem[fe86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe87]
    00 = mem[fe87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    88       08    =>    80
         10001000 00001000 => 10000000
    flags = 0010_1000
    reg[ff] = 80
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe80]
    00 = mem[fe80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe81]
    00 = mem[fe81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe82]
    00 = mem[fe82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe83]
    00 = mem[fe83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe84]
    00 = mem[fe84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe85]
    00 = mem[fe85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe86]
    00 = mem[fe86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe87]
    00 = mem[fe87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2f

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe88]
    00 = mem[fe88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe89]
    00 = mem[fe89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8a]
    00 = mem[fe8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8b]
    00 = mem[fe8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8c]
    00 = mem[fe8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8d]
    00 = mem[fe8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8e]
    00 = mem[fe8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8f]
    00 = mem[fe8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    90       08    =>    88
         10010000 00001000 => 10001000
    flags = 0010_1100
    reg[ff] = 88
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe88]
    00 = mem[fe88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe89]
    00 = mem[fe89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8a]
    00 = mem[fe8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8b]
    00 = mem[fe8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8c]
    00 = mem[fe8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8d]
    00 = mem[fe8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8e]
    00 = mem[fe8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8f]
    00 = mem[fe8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    90       08    =>    88
         10010000 00001000 => 10001000
    flags = 0010_1100
    reg[ff] = 88
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe88]
    00 = mem[fe88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe89]
    00 = mem[fe89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8a]
    00 = mem[fe8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8b]
    00 = mem[fe8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8c]
    00 = mem[fe8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8d]
    00 = mem[fe8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8e]
    00 = mem[fe8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe8f]
    00 = mem[fe8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2e

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe90]
    00 = mem[fe90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe91]
    00 = mem[fe91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe92]
    00 = mem[fe92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe93]
    00 = mem[fe93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe94]
    00 = mem[fe94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe95]
    00 = mem[fe95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe96]
    00 = mem[fe96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe97]
    00 = mem[fe97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    98       08    =>    90
         10011000 00001000 => 10010000
    flags = 0010_1000
    reg[ff] = 90
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe90]
    00 = mem[fe90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe91]
    00 = mem[fe91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe92]
    00 = mem[fe92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe93]
    00 = mem[fe93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe94]
    00 = mem[fe94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe95]
    00 = mem[fe95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe96]
    00 = mem[fe96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe97]
    00 = mem[fe97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    98       08    =>    90
         10011000 00001000 => 10010000
    flags = 0010_1000
    reg[ff] = 90
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe90]
    00 = mem[fe90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe91]
    00 = mem[fe91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe92]
    00 = mem[fe92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe93]
    00 = mem[fe93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe94]
    00 = mem[fe94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe95]
    00 = mem[fe95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe96]
    00 = mem[fe96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe97]
    00 = mem[fe97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2d

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe98]
    00 = mem[fe98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe99]
    00 = mem[fe99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9a]
    00 = mem[fe9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9b]
    00 = mem[fe9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9c]
    00 = mem[fe9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9d]
    00 = mem[fe9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9e]
    00 = mem[fe9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9f]
    00 = mem[fe9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a0       08    =>    98
         10100000 00001000 => 10011000
    flags = 0010_1100
    reg[ff] = 98
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe98]
    00 = mem[fe98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe99]
    00 = mem[fe99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9a]
    00 = mem[fe9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9b]
    00 = mem[fe9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9c]
    00 = mem[fe9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9d]
    00 = mem[fe9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9e]
    00 = mem[fe9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9f]
    00 = mem[fe9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a0       08    =>    98
         10100000 00001000 => 10011000
    flags = 0010_1100
    reg[ff] = 98
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe98]
    00 = mem[fe98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe99]
    00 = mem[fe99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9a]
    00 = mem[fe9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9b]
    00 = mem[fe9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9c]
    00 = mem[fe9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9d]
    00 = mem[fe9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9e]
    00 = mem[fe9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fe9f]
    00 = mem[fe9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2c

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea0]
    00 = mem[fea0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea1]
    00 = mem[fea1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea2]
    00 = mem[fea2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea3]
    00 = mem[fea3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea4]
    00 = mem[fea4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea5]
    00 = mem[fea5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea6]
    00 = mem[fea6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea7]
    00 = mem[fea7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a8       08    =>    a0
         10101000 00001000 => 10100000
    flags = 0010_1000
    reg[ff] = a0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea0]
    00 = mem[fea0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea1]
    00 = mem[fea1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea2]
    00 = mem[fea2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea3]
    00 = mem[fea3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea4]
    00 = mem[fea4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea5]
    00 = mem[fea5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea6]
    00 = mem[fea6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea7]
    00 = mem[fea7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a8       08    =>    a0
         10101000 00001000 => 10100000
    flags = 0010_1000
    reg[ff] = a0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea0]
    00 = mem[fea0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea1]
    00 = mem[fea1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea2]
    00 = mem[fea2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea3]
    00 = mem[fea3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea4]
    00 = mem[fea4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea5]
    00 = mem[fea5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea6]
    00 = mem[fea6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea7]
    00 = mem[fea7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2b

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea8]
    00 = mem[fea8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea9]
    00 = mem[fea9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaa]
    00 = mem[feaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feab]
    00 = mem[feab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feac]
    00 = mem[feac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fead]
    00 = mem[fead]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feae]
    00 = mem[feae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaf]
    00 = mem[feaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b0       08    =>    a8
         10110000 00001000 => 10101000
    flags = 0010_1100
    reg[ff] = a8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea8]
    00 = mem[fea8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea9]
    00 = mem[fea9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaa]
    00 = mem[feaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feab]
    00 = mem[feab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feac]
    00 = mem[feac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fead]
    00 = mem[fead]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feae]
    00 = mem[feae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaf]
    00 = mem[feaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b0       08    =>    a8
         10110000 00001000 => 10101000
    flags = 0010_1100
    reg[ff] = a8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea8]
    00 = mem[fea8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fea9]
    00 = mem[fea9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaa]
    00 = mem[feaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feab]
    00 = mem[feab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feac]
    00 = mem[feac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fead]
    00 = mem[fead]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feae]
    00 = mem[feae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feaf]
    00 = mem[feaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 2a

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb0]
    00 = mem[feb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb1]
    00 = mem[feb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb2]
    00 = mem[feb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb3]
    00 = mem[feb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb4]
    00 = mem[feb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb5]
    00 = mem[feb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb6]
    00 = mem[feb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb7]
    00 = mem[feb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b8       08    =>    b0
         10111000 00001000 => 10110000
    flags = 0010_1000
    reg[ff] = b0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb0]
    00 = mem[feb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb1]
    00 = mem[feb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb2]
    00 = mem[feb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb3]
    00 = mem[feb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb4]
    00 = mem[feb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb5]
    00 = mem[feb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb6]
    00 = mem[feb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb7]
    00 = mem[feb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b8       08    =>    b0
         10111000 00001000 => 10110000
    flags = 0010_1000
    reg[ff] = b0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb0]
    00 = mem[feb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb1]
    00 = mem[feb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb2]
    00 = mem[feb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb3]
    00 = mem[feb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb4]
    00 = mem[feb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb5]
    00 = mem[feb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb6]
    00 = mem[feb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb7]
    00 = mem[feb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 29

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb8]
    00 = mem[feb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb9]
    00 = mem[feb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feba]
    00 = mem[feba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febb]
    00 = mem[febb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febc]
    00 = mem[febc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febd]
    00 = mem[febd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febe]
    00 = mem[febe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febf]
    00 = mem[febf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c0       08    =>    b8
         11000000 00001000 => 10111000
    flags = 0010_1100
    reg[ff] = b8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb8]
    00 = mem[feb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb9]
    00 = mem[feb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feba]
    00 = mem[feba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febb]
    00 = mem[febb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febc]
    00 = mem[febc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febd]
    00 = mem[febd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febe]
    00 = mem[febe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febf]
    00 = mem[febf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c0       08    =>    b8
         11000000 00001000 => 10111000
    flags = 0010_1100
    reg[ff] = b8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb8]
    00 = mem[feb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feb9]
    00 = mem[feb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feba]
    00 = mem[feba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febb]
    00 = mem[febb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febc]
    00 = mem[febc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febd]
    00 = mem[febd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febe]
    00 = mem[febe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[febf]
    00 = mem[febf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 28

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec0]
    00 = mem[fec0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec1]
    00 = mem[fec1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec2]
    00 = mem[fec2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec3]
    00 = mem[fec3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec4]
    00 = mem[fec4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec5]
    00 = mem[fec5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec6]
    00 = mem[fec6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec7]
    00 = mem[fec7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c8       08    =>    c0
         11001000 00001000 => 11000000
    flags = 0010_1000
    reg[ff] = c0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec0]
    00 = mem[fec0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec1]
    00 = mem[fec1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec2]
    00 = mem[fec2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec3]
    00 = mem[fec3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec4]
    00 = mem[fec4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec5]
    00 = mem[fec5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec6]
    00 = mem[fec6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec7]
    00 = mem[fec7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c8       08    =>    c0
         11001000 00001000 => 11000000
    flags = 0010_1000
    reg[ff] = c0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec0]
    00 = mem[fec0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec1]
    00 = mem[fec1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec2]
    00 = mem[fec2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec3]
    00 = mem[fec3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec4]
    00 = mem[fec4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec5]
    00 = mem[fec5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec6]
    00 = mem[fec6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec7]
    00 = mem[fec7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 27

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec8]
    00 = mem[fec8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec9]
    00 = mem[fec9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feca]
    00 = mem[feca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecb]
    00 = mem[fecb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecc]
    00 = mem[fecc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecd]
    00 = mem[fecd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fece]
    00 = mem[fece]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecf]
    00 = mem[fecf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d0       08    =>    c8
         11010000 00001000 => 11001000
    flags = 0010_1100
    reg[ff] = c8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec8]
    00 = mem[fec8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec9]
    00 = mem[fec9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feca]
    00 = mem[feca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecb]
    00 = mem[fecb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecc]
    00 = mem[fecc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecd]
    00 = mem[fecd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fece]
    00 = mem[fece]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecf]
    00 = mem[fecf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d0       08    =>    c8
         11010000 00001000 => 11001000
    flags = 0010_1100
    reg[ff] = c8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec8]
    00 = mem[fec8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fec9]
    00 = mem[fec9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feca]
    00 = mem[feca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecb]
    00 = mem[fecb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecc]
    00 = mem[fecc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecd]
    00 = mem[fecd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fece]
    00 = mem[fece]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fecf]
    00 = mem[fecf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 26

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed0]
    00 = mem[fed0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed1]
    00 = mem[fed1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed2]
    00 = mem[fed2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed3]
    00 = mem[fed3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed4]
    00 = mem[fed4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed5]
    00 = mem[fed5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed6]
    00 = mem[fed6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed7]
    00 = mem[fed7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d8       08    =>    d0
         11011000 00001000 => 11010000
    flags = 0010_1000
    reg[ff] = d0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed0]
    00 = mem[fed0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed1]
    00 = mem[fed1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed2]
    00 = mem[fed2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed3]
    00 = mem[fed3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed4]
    00 = mem[fed4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed5]
    00 = mem[fed5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed6]
    00 = mem[fed6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed7]
    00 = mem[fed7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d8       08    =>    d0
         11011000 00001000 => 11010000
    flags = 0010_1000
    reg[ff] = d0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed0]
    00 = mem[fed0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed1]
    00 = mem[fed1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed2]
    00 = mem[fed2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed3]
    00 = mem[fed3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed4]
    00 = mem[fed4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed5]
    00 = mem[fed5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed6]
    00 = mem[fed6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed7]
    00 = mem[fed7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 25

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed8]
    00 = mem[fed8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed9]
    00 = mem[fed9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feda]
    00 = mem[feda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedb]
    00 = mem[fedb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedc]
    00 = mem[fedc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedd]
    00 = mem[fedd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fede]
    00 = mem[fede]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedf]
    00 = mem[fedf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e0       08    =>    d8
         11100000 00001000 => 11011000
    flags = 0010_1100
    reg[ff] = d8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed8]
    00 = mem[fed8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed9]
    00 = mem[fed9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feda]
    00 = mem[feda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedb]
    00 = mem[fedb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedc]
    00 = mem[fedc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedd]
    00 = mem[fedd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fede]
    00 = mem[fede]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedf]
    00 = mem[fedf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e0       08    =>    d8
         11100000 00001000 => 11011000
    flags = 0010_1100
    reg[ff] = d8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed8]
    00 = mem[fed8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fed9]
    00 = mem[fed9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feda]
    00 = mem[feda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedb]
    00 = mem[fedb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedc]
    00 = mem[fedc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedd]
    00 = mem[fedd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fede]
    00 = mem[fede]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fedf]
    00 = mem[fedf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 24

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee0]
    00 = mem[fee0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee1]
    00 = mem[fee1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee2]
    00 = mem[fee2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee3]
    00 = mem[fee3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee4]
    00 = mem[fee4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee5]
    00 = mem[fee5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee6]
    00 = mem[fee6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee7]
    00 = mem[fee7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e8       08    =>    e0
         11101000 00001000 => 11100000
    flags = 0010_1000
    reg[ff] = e0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee0]
    00 = mem[fee0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee1]
    00 = mem[fee1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee2]
    00 = mem[fee2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee3]
    00 = mem[fee3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee4]
    00 = mem[fee4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee5]
    00 = mem[fee5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee6]
    00 = mem[fee6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee7]
    00 = mem[fee7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e8       08    =>    e0
         11101000 00001000 => 11100000
    flags = 0010_1000
    reg[ff] = e0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee0]
    00 = mem[fee0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee1]
    00 = mem[fee1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee2]
    00 = mem[fee2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee3]
    00 = mem[fee3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee4]
    00 = mem[fee4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee5]
    00 = mem[fee5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee6]
    00 = mem[fee6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee7]
    00 = mem[fee7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 23

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee8]
    00 = mem[fee8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee9]
    00 = mem[fee9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feea]
    00 = mem[feea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feeb]
    00 = mem[feeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feec]
    00 = mem[feec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feed]
    00 = mem[feed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feee]
    00 = mem[feee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feef]
    00 = mem[feef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f0       08    =>    e8
         11110000 00001000 => 11101000
    flags = 0010_1100
    reg[ff] = e8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee8]
    00 = mem[fee8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee9]
    00 = mem[fee9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feea]
    00 = mem[feea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feeb]
    00 = mem[feeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feec]
    00 = mem[feec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feed]
    00 = mem[feed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feee]
    00 = mem[feee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feef]
    00 = mem[feef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f0       08    =>    e8
         11110000 00001000 => 11101000
    flags = 0010_1100
    reg[ff] = e8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee8]
    00 = mem[fee8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fee9]
    00 = mem[fee9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feea]
    00 = mem[feea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feeb]
    00 = mem[feeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feec]
    00 = mem[feec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feed]
    00 = mem[feed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feee]
    00 = mem[feee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feef]
    00 = mem[feef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 22

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef0]
    00 = mem[fef0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef1]
    00 = mem[fef1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef2]
    00 = mem[fef2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef3]
    00 = mem[fef3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef4]
    00 = mem[fef4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef5]
    00 = mem[fef5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef6]
    00 = mem[fef6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef7]
    00 = mem[fef7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f8       08    =>    f0
         11111000 00001000 => 11110000
    flags = 0010_1000
    reg[ff] = f0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef0]
    00 = mem[fef0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef1]
    00 = mem[fef1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef2]
    00 = mem[fef2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef3]
    00 = mem[fef3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef4]
    00 = mem[fef4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef5]
    00 = mem[fef5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef6]
    00 = mem[fef6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef7]
    00 = mem[fef7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f8       08    =>    f0
         11111000 00001000 => 11110000
    flags = 0010_1000
    reg[ff] = f0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    fe       00    =>    fe
         11111110 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef0]
    00 = mem[fef0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef1]
    00 = mem[fef1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef2]
    00 = mem[fef2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef3]
    00 = mem[fef3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef4]
    00 = mem[fef4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef5]
    00 = mem[fef5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef6]
    00 = mem[fef6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef7]
    00 = mem[fef7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 21

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef8]
    00 = mem[fef8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef9]
    00 = mem[fef9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefa]
    00 = mem[fefa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefb]
    00 = mem[fefb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefc]
    00 = mem[fefc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefd]
    00 = mem[fefd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefe]
    00 = mem[fefe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feff]
    00 = mem[feff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    00       08    =>    f8
         00000000 00001000 => 11111000
    flags = 1011_1100
    reg[ff] = f8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    fe
         11111111 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef8]
    00 = mem[fef8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef9]
    00 = mem[fef9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefa]
    00 = mem[fefa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefb]
    00 = mem[fefb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefc]
    00 = mem[fefc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefd]
    00 = mem[fefd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefe]
    00 = mem[fefe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feff]
    00 = mem[feff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    00       08    =>    f8
         00000000 00001000 => 11111000
    flags = 1011_1100
    reg[ff] = f8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    fe
         11111111 00000000 => 11111110
    flags = 0010_1000
    reg[fe] = fe
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef8]
    00 = mem[fef8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fef9]
    00 = mem[fef9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefa]
    00 = mem[fefa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefb]
    00 = mem[fefb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefc]
    00 = mem[fefc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefd]
    00 = mem[fefd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fefe]
    00 = mem[fefe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[feff]
    00 = mem[feff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 20

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff00]
    00 = mem[ff00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff01]
    00 = mem[ff01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff02]
    00 = mem[ff02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff03]
    00 = mem[ff03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff04]
    00 = mem[ff04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff05]
    00 = mem[ff05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff06]
    00 = mem[ff06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff07]
    00 = mem[ff07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    08       08    =>    00
         00001000 00001000 => 00000000
    flags = 0100_1000
    reg[ff] = 00
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff00]
    00 = mem[ff00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff01]
    00 = mem[ff01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff02]
    00 = mem[ff02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff03]
    00 = mem[ff03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff04]
    00 = mem[ff04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff05]
    00 = mem[ff05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff06]
    00 = mem[ff06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff07]
    00 = mem[ff07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    08       08    =>    00
         00001000 00001000 => 00000000
    flags = 0100_1000
    reg[ff] = 00
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff00]
    00 = mem[ff00]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff01]
    00 = mem[ff01]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff02]
    00 = mem[ff02]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff03]
    00 = mem[ff03]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff04]
    00 = mem[ff04]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff05]
    00 = mem[ff05]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff06]
    00 = mem[ff06]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff07]
    00 = mem[ff07]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1f

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff08]
    00 = mem[ff08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff09]
    00 = mem[ff09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0a]
    00 = mem[ff0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0b]
    00 = mem[ff0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0c]
    00 = mem[ff0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0d]
    00 = mem[ff0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0e]
    00 = mem[ff0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0f]
    00 = mem[ff0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    10       08    =>    08
         00010000 00001000 => 00001000
    flags = 0000_1100
    reg[ff] = 08
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff08]
    00 = mem[ff08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff09]
    00 = mem[ff09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0a]
    00 = mem[ff0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0b]
    00 = mem[ff0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0c]
    00 = mem[ff0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0d]
    00 = mem[ff0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0e]
    00 = mem[ff0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0f]
    00 = mem[ff0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    10       08    =>    08
         00010000 00001000 => 00001000
    flags = 0000_1100
    reg[ff] = 08
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff08]
    00 = mem[ff08]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff09]
    00 = mem[ff09]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0a]
    00 = mem[ff0a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0b]
    00 = mem[ff0b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0c]
    00 = mem[ff0c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0d]
    00 = mem[ff0d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0e]
    00 = mem[ff0e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff0f]
    00 = mem[ff0f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1e

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff10]
    00 = mem[ff10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff11]
    00 = mem[ff11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff12]
    00 = mem[ff12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff13]
    00 = mem[ff13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff14]
    00 = mem[ff14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff15]
    00 = mem[ff15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff16]
    00 = mem[ff16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff17]
    00 = mem[ff17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    18       08    =>    10
         00011000 00001000 => 00010000
    flags = 0000_1000
    reg[ff] = 10
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff10]
    00 = mem[ff10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff11]
    00 = mem[ff11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff12]
    00 = mem[ff12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff13]
    00 = mem[ff13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff14]
    00 = mem[ff14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff15]
    00 = mem[ff15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff16]
    00 = mem[ff16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff17]
    00 = mem[ff17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    18       08    =>    10
         00011000 00001000 => 00010000
    flags = 0000_1000
    reg[ff] = 10
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff10]
    00 = mem[ff10]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff11]
    00 = mem[ff11]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff12]
    00 = mem[ff12]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff13]
    00 = mem[ff13]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff14]
    00 = mem[ff14]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff15]
    00 = mem[ff15]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff16]
    00 = mem[ff16]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff17]
    00 = mem[ff17]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1d

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff18]
    00 = mem[ff18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff19]
    00 = mem[ff19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1a]
    00 = mem[ff1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1b]
    00 = mem[ff1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1c]
    00 = mem[ff1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1d]
    00 = mem[ff1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1e]
    00 = mem[ff1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1f]
    00 = mem[ff1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    20       08    =>    18
         00100000 00001000 => 00011000
    flags = 0000_1100
    reg[ff] = 18
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff18]
    00 = mem[ff18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff19]
    00 = mem[ff19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1a]
    00 = mem[ff1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1b]
    00 = mem[ff1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1c]
    00 = mem[ff1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1d]
    00 = mem[ff1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1e]
    00 = mem[ff1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1f]
    00 = mem[ff1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    20       08    =>    18
         00100000 00001000 => 00011000
    flags = 0000_1100
    reg[ff] = 18
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff18]
    00 = mem[ff18]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff19]
    00 = mem[ff19]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1a]
    00 = mem[ff1a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1b]
    00 = mem[ff1b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1c]
    00 = mem[ff1c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1d]
    00 = mem[ff1d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1e]
    00 = mem[ff1e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff1f]
    00 = mem[ff1f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1c

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff20]
    00 = mem[ff20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff21]
    00 = mem[ff21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff22]
    00 = mem[ff22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff23]
    00 = mem[ff23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff24]
    00 = mem[ff24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff25]
    00 = mem[ff25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff26]
    00 = mem[ff26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff27]
    00 = mem[ff27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    28       08    =>    20
         00101000 00001000 => 00100000
    flags = 0000_1000
    reg[ff] = 20
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff20]
    00 = mem[ff20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff21]
    00 = mem[ff21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff22]
    00 = mem[ff22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff23]
    00 = mem[ff23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff24]
    00 = mem[ff24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff25]
    00 = mem[ff25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff26]
    00 = mem[ff26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff27]
    00 = mem[ff27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    28       08    =>    20
         00101000 00001000 => 00100000
    flags = 0000_1000
    reg[ff] = 20
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff20]
    00 = mem[ff20]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff21]
    00 = mem[ff21]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff22]
    00 = mem[ff22]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff23]
    00 = mem[ff23]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff24]
    00 = mem[ff24]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff25]
    00 = mem[ff25]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff26]
    00 = mem[ff26]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff27]
    00 = mem[ff27]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1b

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff28]
    00 = mem[ff28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff29]
    00 = mem[ff29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2a]
    00 = mem[ff2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2b]
    00 = mem[ff2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2c]
    00 = mem[ff2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2d]
    00 = mem[ff2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2e]
    00 = mem[ff2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2f]
    00 = mem[ff2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    30       08    =>    28
         00110000 00001000 => 00101000
    flags = 0000_1100
    reg[ff] = 28
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff28]
    00 = mem[ff28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff29]
    00 = mem[ff29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2a]
    00 = mem[ff2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2b]
    00 = mem[ff2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2c]
    00 = mem[ff2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2d]
    00 = mem[ff2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2e]
    00 = mem[ff2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2f]
    00 = mem[ff2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    30       08    =>    28
         00110000 00001000 => 00101000
    flags = 0000_1100
    reg[ff] = 28
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff28]
    00 = mem[ff28]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff29]
    00 = mem[ff29]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2a]
    00 = mem[ff2a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2b]
    00 = mem[ff2b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2c]
    00 = mem[ff2c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2d]
    00 = mem[ff2d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2e]
    00 = mem[ff2e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff2f]
    00 = mem[ff2f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 1a

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff30]
    00 = mem[ff30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff31]
    00 = mem[ff31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff32]
    00 = mem[ff32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff33]
    00 = mem[ff33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff34]
    00 = mem[ff34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff35]
    00 = mem[ff35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff36]
    00 = mem[ff36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff37]
    00 = mem[ff37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    38       08    =>    30
         00111000 00001000 => 00110000
    flags = 0000_1000
    reg[ff] = 30
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff30]
    00 = mem[ff30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff31]
    00 = mem[ff31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff32]
    00 = mem[ff32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff33]
    00 = mem[ff33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff34]
    00 = mem[ff34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff35]
    00 = mem[ff35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff36]
    00 = mem[ff36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff37]
    00 = mem[ff37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    38       08    =>    30
         00111000 00001000 => 00110000
    flags = 0000_1000
    reg[ff] = 30
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff30]
    00 = mem[ff30]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff31]
    00 = mem[ff31]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff32]
    00 = mem[ff32]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff33]
    00 = mem[ff33]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff34]
    00 = mem[ff34]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff35]
    00 = mem[ff35]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff36]
    00 = mem[ff36]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff37]
    00 = mem[ff37]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 19

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff38]
    00 = mem[ff38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff39]
    00 = mem[ff39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3a]
    00 = mem[ff3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3b]
    00 = mem[ff3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3c]
    00 = mem[ff3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3d]
    00 = mem[ff3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3e]
    00 = mem[ff3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3f]
    00 = mem[ff3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    40       08    =>    38
         01000000 00001000 => 00111000
    flags = 0000_1100
    reg[ff] = 38
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff38]
    00 = mem[ff38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff39]
    00 = mem[ff39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3a]
    00 = mem[ff3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3b]
    00 = mem[ff3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3c]
    00 = mem[ff3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3d]
    00 = mem[ff3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3e]
    00 = mem[ff3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3f]
    00 = mem[ff3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    40       08    =>    38
         01000000 00001000 => 00111000
    flags = 0000_1100
    reg[ff] = 38
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff38]
    00 = mem[ff38]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff39]
    00 = mem[ff39]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3a]
    00 = mem[ff3a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3b]
    00 = mem[ff3b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3c]
    00 = mem[ff3c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3d]
    00 = mem[ff3d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3e]
    00 = mem[ff3e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff3f]
    00 = mem[ff3f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 18

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff40]
    00 = mem[ff40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff41]
    00 = mem[ff41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff42]
    00 = mem[ff42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff43]
    00 = mem[ff43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff44]
    00 = mem[ff44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff45]
    00 = mem[ff45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff46]
    00 = mem[ff46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff47]
    00 = mem[ff47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    48       08    =>    40
         01001000 00001000 => 01000000
    flags = 0000_1000
    reg[ff] = 40
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff40]
    00 = mem[ff40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff41]
    00 = mem[ff41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff42]
    00 = mem[ff42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff43]
    00 = mem[ff43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff44]
    00 = mem[ff44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff45]
    00 = mem[ff45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff46]
    00 = mem[ff46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff47]
    00 = mem[ff47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    48       08    =>    40
         01001000 00001000 => 01000000
    flags = 0000_1000
    reg[ff] = 40
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff40]
    00 = mem[ff40]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff41]
    00 = mem[ff41]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff42]
    00 = mem[ff42]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff43]
    00 = mem[ff43]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff44]
    00 = mem[ff44]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff45]
    00 = mem[ff45]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff46]
    00 = mem[ff46]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff47]
    00 = mem[ff47]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 17

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff48]
    00 = mem[ff48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff49]
    00 = mem[ff49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4a]
    00 = mem[ff4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4b]
    00 = mem[ff4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4c]
    00 = mem[ff4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4d]
    00 = mem[ff4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4e]
    00 = mem[ff4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4f]
    00 = mem[ff4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    50       08    =>    48
         01010000 00001000 => 01001000
    flags = 0000_1100
    reg[ff] = 48
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff48]
    00 = mem[ff48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff49]
    00 = mem[ff49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4a]
    00 = mem[ff4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4b]
    00 = mem[ff4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4c]
    00 = mem[ff4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4d]
    00 = mem[ff4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4e]
    00 = mem[ff4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4f]
    00 = mem[ff4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    50       08    =>    48
         01010000 00001000 => 01001000
    flags = 0000_1100
    reg[ff] = 48
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff48]
    00 = mem[ff48]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff49]
    00 = mem[ff49]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4a]
    00 = mem[ff4a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4b]
    00 = mem[ff4b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4c]
    00 = mem[ff4c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4d]
    00 = mem[ff4d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4e]
    00 = mem[ff4e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff4f]
    00 = mem[ff4f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 16

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff50]
    00 = mem[ff50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff51]
    00 = mem[ff51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff52]
    00 = mem[ff52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff53]
    00 = mem[ff53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff54]
    00 = mem[ff54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff55]
    00 = mem[ff55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff56]
    00 = mem[ff56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff57]
    00 = mem[ff57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    58       08    =>    50
         01011000 00001000 => 01010000
    flags = 0000_1000
    reg[ff] = 50
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff50]
    00 = mem[ff50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff51]
    00 = mem[ff51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff52]
    00 = mem[ff52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff53]
    00 = mem[ff53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff54]
    00 = mem[ff54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff55]
    00 = mem[ff55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff56]
    00 = mem[ff56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff57]
    00 = mem[ff57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    58       08    =>    50
         01011000 00001000 => 01010000
    flags = 0000_1000
    reg[ff] = 50
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff50]
    00 = mem[ff50]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff51]
    00 = mem[ff51]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff52]
    00 = mem[ff52]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff53]
    00 = mem[ff53]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff54]
    00 = mem[ff54]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff55]
    00 = mem[ff55]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff56]
    00 = mem[ff56]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff57]
    00 = mem[ff57]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 15

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff58]
    00 = mem[ff58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff59]
    00 = mem[ff59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5a]
    00 = mem[ff5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5b]
    00 = mem[ff5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5c]
    00 = mem[ff5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5d]
    00 = mem[ff5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5e]
    00 = mem[ff5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5f]
    00 = mem[ff5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    60       08    =>    58
         01100000 00001000 => 01011000
    flags = 0000_1100
    reg[ff] = 58
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff58]
    00 = mem[ff58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff59]
    00 = mem[ff59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5a]
    00 = mem[ff5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5b]
    00 = mem[ff5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5c]
    00 = mem[ff5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5d]
    00 = mem[ff5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5e]
    00 = mem[ff5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5f]
    00 = mem[ff5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    60       08    =>    58
         01100000 00001000 => 01011000
    flags = 0000_1100
    reg[ff] = 58
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff58]
    00 = mem[ff58]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff59]
    00 = mem[ff59]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5a]
    00 = mem[ff5a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5b]
    00 = mem[ff5b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5c]
    00 = mem[ff5c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5d]
    00 = mem[ff5d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5e]
    00 = mem[ff5e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff5f]
    00 = mem[ff5f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 14

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff60]
    00 = mem[ff60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff61]
    00 = mem[ff61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff62]
    00 = mem[ff62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff63]
    00 = mem[ff63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff64]
    00 = mem[ff64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff65]
    00 = mem[ff65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff66]
    00 = mem[ff66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff67]
    00 = mem[ff67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    68       08    =>    60
         01101000 00001000 => 01100000
    flags = 0000_1000
    reg[ff] = 60
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff60]
    00 = mem[ff60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff61]
    00 = mem[ff61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff62]
    00 = mem[ff62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff63]
    00 = mem[ff63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff64]
    00 = mem[ff64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff65]
    00 = mem[ff65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff66]
    00 = mem[ff66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff67]
    00 = mem[ff67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    68       08    =>    60
         01101000 00001000 => 01100000
    flags = 0000_1000
    reg[ff] = 60
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff60]
    00 = mem[ff60]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff61]
    00 = mem[ff61]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff62]
    00 = mem[ff62]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff63]
    00 = mem[ff63]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff64]
    00 = mem[ff64]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff65]
    00 = mem[ff65]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff66]
    00 = mem[ff66]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff67]
    00 = mem[ff67]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 13

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff68]
    00 = mem[ff68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff69]
    00 = mem[ff69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6a]
    00 = mem[ff6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6b]
    00 = mem[ff6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6c]
    00 = mem[ff6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6d]
    00 = mem[ff6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6e]
    00 = mem[ff6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6f]
    00 = mem[ff6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    70       08    =>    68
         01110000 00001000 => 01101000
    flags = 0000_1100
    reg[ff] = 68
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff68]
    00 = mem[ff68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff69]
    00 = mem[ff69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6a]
    00 = mem[ff6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6b]
    00 = mem[ff6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6c]
    00 = mem[ff6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6d]
    00 = mem[ff6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6e]
    00 = mem[ff6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6f]
    00 = mem[ff6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    70       08    =>    68
         01110000 00001000 => 01101000
    flags = 0000_1100
    reg[ff] = 68
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff68]
    00 = mem[ff68]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff69]
    00 = mem[ff69]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6a]
    00 = mem[ff6a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6b]
    00 = mem[ff6b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6c]
    00 = mem[ff6c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6d]
    00 = mem[ff6d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6e]
    00 = mem[ff6e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff6f]
    00 = mem[ff6f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 12

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff70]
    00 = mem[ff70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff71]
    00 = mem[ff71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff72]
    00 = mem[ff72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff73]
    00 = mem[ff73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff74]
    00 = mem[ff74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff75]
    00 = mem[ff75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff76]
    00 = mem[ff76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff77]
    00 = mem[ff77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    78       08    =>    70
         01111000 00001000 => 01110000
    flags = 0000_1000
    reg[ff] = 70
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff70]
    00 = mem[ff70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff71]
    00 = mem[ff71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff72]
    00 = mem[ff72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff73]
    00 = mem[ff73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff74]
    00 = mem[ff74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff75]
    00 = mem[ff75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff76]
    00 = mem[ff76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff77]
    00 = mem[ff77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    78       08    =>    70
         01111000 00001000 => 01110000
    flags = 0000_1000
    reg[ff] = 70
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff70]
    00 = mem[ff70]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff71]
    00 = mem[ff71]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff72]
    00 = mem[ff72]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff73]
    00 = mem[ff73]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff74]
    00 = mem[ff74]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff75]
    00 = mem[ff75]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff76]
    00 = mem[ff76]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff77]
    00 = mem[ff77]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 11

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff78]
    00 = mem[ff78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff79]
    00 = mem[ff79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7a]
    00 = mem[ff7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7b]
    00 = mem[ff7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7c]
    00 = mem[ff7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7d]
    00 = mem[ff7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7e]
    00 = mem[ff7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7f]
    00 = mem[ff7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    80       08    =>    78
         10000000 00001000 => 01111000
    flags = 0000_1100
    reg[ff] = 78
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff78]
    00 = mem[ff78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff79]
    00 = mem[ff79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7a]
    00 = mem[ff7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7b]
    00 = mem[ff7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7c]
    00 = mem[ff7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7d]
    00 = mem[ff7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7e]
    00 = mem[ff7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7f]
    00 = mem[ff7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    80       08    =>    78
         10000000 00001000 => 01111000
    flags = 0000_1100
    reg[ff] = 78
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff78]
    00 = mem[ff78]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff79]
    00 = mem[ff79]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7a]
    00 = mem[ff7a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7b]
    00 = mem[ff7b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7c]
    00 = mem[ff7c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7d]
    00 = mem[ff7d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7e]
    00 = mem[ff7e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff7f]
    00 = mem[ff7f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 10

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff80]
    00 = mem[ff80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff81]
    00 = mem[ff81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff82]
    00 = mem[ff82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff83]
    00 = mem[ff83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff84]
    00 = mem[ff84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff85]
    00 = mem[ff85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff86]
    00 = mem[ff86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff87]
    00 = mem[ff87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    88       08    =>    80
         10001000 00001000 => 10000000
    flags = 0010_1000
    reg[ff] = 80
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff80]
    00 = mem[ff80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff81]
    00 = mem[ff81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff82]
    00 = mem[ff82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff83]
    00 = mem[ff83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff84]
    00 = mem[ff84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff85]
    00 = mem[ff85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff86]
    00 = mem[ff86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff87]
    00 = mem[ff87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    88       08    =>    80
         10001000 00001000 => 10000000
    flags = 0010_1000
    reg[ff] = 80
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff80]
    00 = mem[ff80]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff81]
    00 = mem[ff81]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff82]
    00 = mem[ff82]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff83]
    00 = mem[ff83]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff84]
    00 = mem[ff84]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff85]
    00 = mem[ff85]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff86]
    00 = mem[ff86]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff87]
    00 = mem[ff87]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0f

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff88]
    00 = mem[ff88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff89]
    00 = mem[ff89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8a]
    00 = mem[ff8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8b]
    00 = mem[ff8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8c]
    00 = mem[ff8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8d]
    00 = mem[ff8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8e]
    00 = mem[ff8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8f]
    00 = mem[ff8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    90       08    =>    88
         10010000 00001000 => 10001000
    flags = 0010_1100
    reg[ff] = 88
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff88]
    00 = mem[ff88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff89]
    00 = mem[ff89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8a]
    00 = mem[ff8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8b]
    00 = mem[ff8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8c]
    00 = mem[ff8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8d]
    00 = mem[ff8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8e]
    00 = mem[ff8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8f]
    00 = mem[ff8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    90       08    =>    88
         10010000 00001000 => 10001000
    flags = 0010_1100
    reg[ff] = 88
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff88]
    00 = mem[ff88]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff89]
    00 = mem[ff89]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8a]
    00 = mem[ff8a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8b]
    00 = mem[ff8b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8c]
    00 = mem[ff8c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8d]
    00 = mem[ff8d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8e]
    00 = mem[ff8e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff8f]
    00 = mem[ff8f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0e

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff90]
    00 = mem[ff90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff91]
    00 = mem[ff91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff92]
    00 = mem[ff92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff93]
    00 = mem[ff93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff94]
    00 = mem[ff94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff95]
    00 = mem[ff95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff96]
    00 = mem[ff96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff97]
    00 = mem[ff97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    98       08    =>    90
         10011000 00001000 => 10010000
    flags = 0010_1000
    reg[ff] = 90
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff90]
    00 = mem[ff90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff91]
    00 = mem[ff91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff92]
    00 = mem[ff92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff93]
    00 = mem[ff93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff94]
    00 = mem[ff94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff95]
    00 = mem[ff95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff96]
    00 = mem[ff96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff97]
    00 = mem[ff97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    98       08    =>    90
         10011000 00001000 => 10010000
    flags = 0010_1000
    reg[ff] = 90
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff90]
    00 = mem[ff90]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff91]
    00 = mem[ff91]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff92]
    00 = mem[ff92]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff93]
    00 = mem[ff93]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff94]
    00 = mem[ff94]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff95]
    00 = mem[ff95]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff96]
    00 = mem[ff96]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff97]
    00 = mem[ff97]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0d

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff98]
    00 = mem[ff98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff99]
    00 = mem[ff99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9a]
    00 = mem[ff9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9b]
    00 = mem[ff9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9c]
    00 = mem[ff9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9d]
    00 = mem[ff9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9e]
    00 = mem[ff9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9f]
    00 = mem[ff9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a0       08    =>    98
         10100000 00001000 => 10011000
    flags = 0010_1100
    reg[ff] = 98
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff98]
    00 = mem[ff98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff99]
    00 = mem[ff99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9a]
    00 = mem[ff9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9b]
    00 = mem[ff9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9c]
    00 = mem[ff9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9d]
    00 = mem[ff9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9e]
    00 = mem[ff9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9f]
    00 = mem[ff9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a0       08    =>    98
         10100000 00001000 => 10011000
    flags = 0010_1100
    reg[ff] = 98
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff98]
    00 = mem[ff98]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff99]
    00 = mem[ff99]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9a]
    00 = mem[ff9a]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9b]
    00 = mem[ff9b]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9c]
    00 = mem[ff9c]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9d]
    00 = mem[ff9d]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9e]
    00 = mem[ff9e]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ff9f]
    00 = mem[ff9f]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0c

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa0]
    00 = mem[ffa0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa1]
    00 = mem[ffa1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa2]
    00 = mem[ffa2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa3]
    00 = mem[ffa3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa4]
    00 = mem[ffa4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa5]
    00 = mem[ffa5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa6]
    00 = mem[ffa6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa7]
    00 = mem[ffa7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a8       08    =>    a0
         10101000 00001000 => 10100000
    flags = 0010_1000
    reg[ff] = a0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa0]
    00 = mem[ffa0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa1]
    00 = mem[ffa1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa2]
    00 = mem[ffa2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa3]
    00 = mem[ffa3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa4]
    00 = mem[ffa4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa5]
    00 = mem[ffa5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa6]
    00 = mem[ffa6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa7]
    00 = mem[ffa7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    a8       08    =>    a0
         10101000 00001000 => 10100000
    flags = 0010_1000
    reg[ff] = a0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa0]
    00 = mem[ffa0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa1]
    00 = mem[ffa1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa2]
    00 = mem[ffa2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa3]
    00 = mem[ffa3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa4]
    00 = mem[ffa4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa5]
    00 = mem[ffa5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa6]
    00 = mem[ffa6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa7]
    00 = mem[ffa7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0b

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa8]
    00 = mem[ffa8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa9]
    00 = mem[ffa9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaa]
    00 = mem[ffaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffab]
    00 = mem[ffab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffac]
    00 = mem[ffac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffad]
    00 = mem[ffad]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffae]
    00 = mem[ffae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaf]
    00 = mem[ffaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b0       08    =>    a8
         10110000 00001000 => 10101000
    flags = 0010_1100
    reg[ff] = a8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa8]
    00 = mem[ffa8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa9]
    00 = mem[ffa9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaa]
    00 = mem[ffaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffab]
    00 = mem[ffab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffac]
    00 = mem[ffac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffad]
    00 = mem[ffad]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffae]
    00 = mem[ffae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaf]
    00 = mem[ffaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b0       08    =>    a8
         10110000 00001000 => 10101000
    flags = 0010_1100
    reg[ff] = a8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa8]
    00 = mem[ffa8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffa9]
    00 = mem[ffa9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaa]
    00 = mem[ffaa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffab]
    00 = mem[ffab]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffac]
    00 = mem[ffac]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffad]
    00 = mem[ffad]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffae]
    00 = mem[ffae]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffaf]
    00 = mem[ffaf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 0a

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb0]
    00 = mem[ffb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb1]
    00 = mem[ffb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb2]
    00 = mem[ffb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb3]
    00 = mem[ffb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb4]
    00 = mem[ffb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb5]
    00 = mem[ffb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb6]
    00 = mem[ffb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb7]
    00 = mem[ffb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b8       08    =>    b0
         10111000 00001000 => 10110000
    flags = 0010_1000
    reg[ff] = b0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb0]
    00 = mem[ffb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb1]
    00 = mem[ffb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb2]
    00 = mem[ffb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb3]
    00 = mem[ffb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb4]
    00 = mem[ffb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb5]
    00 = mem[ffb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb6]
    00 = mem[ffb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb7]
    00 = mem[ffb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    b8       08    =>    b0
         10111000 00001000 => 10110000
    flags = 0010_1000
    reg[ff] = b0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb0]
    00 = mem[ffb0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb1]
    00 = mem[ffb1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb2]
    00 = mem[ffb2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb3]
    00 = mem[ffb3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb4]
    00 = mem[ffb4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb5]
    00 = mem[ffb5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb6]
    00 = mem[ffb6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb7]
    00 = mem[ffb7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 09

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb8]
    00 = mem[ffb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb9]
    00 = mem[ffb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffba]
    00 = mem[ffba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbb]
    00 = mem[ffbb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbc]
    00 = mem[ffbc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbd]
    00 = mem[ffbd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbe]
    00 = mem[ffbe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbf]
    00 = mem[ffbf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c0       08    =>    b8
         11000000 00001000 => 10111000
    flags = 0010_1100
    reg[ff] = b8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb8]
    00 = mem[ffb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb9]
    00 = mem[ffb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffba]
    00 = mem[ffba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbb]
    00 = mem[ffbb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbc]
    00 = mem[ffbc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbd]
    00 = mem[ffbd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbe]
    00 = mem[ffbe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbf]
    00 = mem[ffbf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c0       08    =>    b8
         11000000 00001000 => 10111000
    flags = 0010_1100
    reg[ff] = b8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb8]
    00 = mem[ffb8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffb9]
    00 = mem[ffb9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffba]
    00 = mem[ffba]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbb]
    00 = mem[ffbb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbc]
    00 = mem[ffbc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbd]
    00 = mem[ffbd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbe]
    00 = mem[ffbe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffbf]
    00 = mem[ffbf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 08

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc0]
    00 = mem[ffc0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc1]
    00 = mem[ffc1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc2]
    00 = mem[ffc2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc3]
    00 = mem[ffc3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc4]
    00 = mem[ffc4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc5]
    00 = mem[ffc5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc6]
    00 = mem[ffc6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc7]
    00 = mem[ffc7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c8       08    =>    c0
         11001000 00001000 => 11000000
    flags = 0010_1000
    reg[ff] = c0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc0]
    00 = mem[ffc0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc1]
    00 = mem[ffc1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc2]
    00 = mem[ffc2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc3]
    00 = mem[ffc3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc4]
    00 = mem[ffc4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc5]
    00 = mem[ffc5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc6]
    00 = mem[ffc6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc7]
    00 = mem[ffc7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    c8       08    =>    c0
         11001000 00001000 => 11000000
    flags = 0010_1000
    reg[ff] = c0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc0]
    00 = mem[ffc0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc1]
    00 = mem[ffc1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc2]
    00 = mem[ffc2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc3]
    00 = mem[ffc3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc4]
    00 = mem[ffc4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc5]
    00 = mem[ffc5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc6]
    00 = mem[ffc6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc7]
    00 = mem[ffc7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 07

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc8]
    00 = mem[ffc8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc9]
    00 = mem[ffc9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffca]
    00 = mem[ffca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcb]
    00 = mem[ffcb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcc]
    00 = mem[ffcc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcd]
    00 = mem[ffcd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffce]
    00 = mem[ffce]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcf]
    00 = mem[ffcf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d0       08    =>    c8
         11010000 00001000 => 11001000
    flags = 0010_1100
    reg[ff] = c8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc8]
    00 = mem[ffc8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc9]
    00 = mem[ffc9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffca]
    00 = mem[ffca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcb]
    00 = mem[ffcb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcc]
    00 = mem[ffcc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcd]
    00 = mem[ffcd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffce]
    00 = mem[ffce]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcf]
    00 = mem[ffcf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d0       08    =>    c8
         11010000 00001000 => 11001000
    flags = 0010_1100
    reg[ff] = c8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc8]
    00 = mem[ffc8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffc9]
    00 = mem[ffc9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffca]
    00 = mem[ffca]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcb]
    00 = mem[ffcb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcc]
    00 = mem[ffcc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcd]
    00 = mem[ffcd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffce]
    00 = mem[ffce]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffcf]
    00 = mem[ffcf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 06

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd0]
    00 = mem[ffd0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd1]
    00 = mem[ffd1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd2]
    00 = mem[ffd2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd3]
    00 = mem[ffd3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd4]
    00 = mem[ffd4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd5]
    00 = mem[ffd5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd6]
    00 = mem[ffd6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd7]
    00 = mem[ffd7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d8       08    =>    d0
         11011000 00001000 => 11010000
    flags = 0010_1000
    reg[ff] = d0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd0]
    00 = mem[ffd0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd1]
    00 = mem[ffd1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd2]
    00 = mem[ffd2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd3]
    00 = mem[ffd3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd4]
    00 = mem[ffd4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd5]
    00 = mem[ffd5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd6]
    00 = mem[ffd6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd7]
    00 = mem[ffd7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    d8       08    =>    d0
         11011000 00001000 => 11010000
    flags = 0010_1000
    reg[ff] = d0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd0]
    00 = mem[ffd0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd1]
    00 = mem[ffd1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd2]
    00 = mem[ffd2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd3]
    00 = mem[ffd3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd4]
    00 = mem[ffd4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd5]
    00 = mem[ffd5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd6]
    00 = mem[ffd6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd7]
    00 = mem[ffd7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 05

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd8]
    00 = mem[ffd8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd9]
    00 = mem[ffd9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffda]
    00 = mem[ffda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdb]
    00 = mem[ffdb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdc]
    00 = mem[ffdc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdd]
    00 = mem[ffdd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffde]
    00 = mem[ffde]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdf]
    00 = mem[ffdf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e0       08    =>    d8
         11100000 00001000 => 11011000
    flags = 0010_1100
    reg[ff] = d8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd8]
    00 = mem[ffd8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd9]
    00 = mem[ffd9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffda]
    00 = mem[ffda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdb]
    00 = mem[ffdb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdc]
    00 = mem[ffdc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdd]
    00 = mem[ffdd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffde]
    00 = mem[ffde]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdf]
    00 = mem[ffdf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e0       08    =>    d8
         11100000 00001000 => 11011000
    flags = 0010_1100
    reg[ff] = d8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd8]
    00 = mem[ffd8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffd9]
    00 = mem[ffd9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffda]
    00 = mem[ffda]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdb]
    00 = mem[ffdb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdc]
    00 = mem[ffdc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdd]
    00 = mem[ffdd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffde]
    00 = mem[ffde]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffdf]
    00 = mem[ffdf]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 04

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe0]
    00 = mem[ffe0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe1]
    00 = mem[ffe1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe2]
    00 = mem[ffe2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe3]
    00 = mem[ffe3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe4]
    00 = mem[ffe4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe5]
    00 = mem[ffe5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe6]
    00 = mem[ffe6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe7]
    00 = mem[ffe7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e8       08    =>    e0
         11101000 00001000 => 11100000
    flags = 0010_1000
    reg[ff] = e0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe0]
    00 = mem[ffe0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe1]
    00 = mem[ffe1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe2]
    00 = mem[ffe2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe3]
    00 = mem[ffe3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe4]
    00 = mem[ffe4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe5]
    00 = mem[ffe5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe6]
    00 = mem[ffe6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe7]
    00 = mem[ffe7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    e8       08    =>    e0
         11101000 00001000 => 11100000
    flags = 0010_1000
    reg[ff] = e0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe0]
    00 = mem[ffe0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe1]
    00 = mem[ffe1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe2]
    00 = mem[ffe2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe3]
    00 = mem[ffe3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe4]
    00 = mem[ffe4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe5]
    00 = mem[ffe5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe6]
    00 = mem[ffe6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe7]
    00 = mem[ffe7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 03

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe8]
    00 = mem[ffe8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe9]
    00 = mem[ffe9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffea]
    00 = mem[ffea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffeb]
    00 = mem[ffeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffec]
    00 = mem[ffec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffed]
    00 = mem[ffed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffee]
    00 = mem[ffee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffef]
    00 = mem[ffef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f0       08    =>    e8
         11110000 00001000 => 11101000
    flags = 0010_1100
    reg[ff] = e8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe8]
    00 = mem[ffe8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe9]
    00 = mem[ffe9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffea]
    00 = mem[ffea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffeb]
    00 = mem[ffeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffec]
    00 = mem[ffec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffed]
    00 = mem[ffed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffee]
    00 = mem[ffee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffef]
    00 = mem[ffef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f0       08    =>    e8
         11110000 00001000 => 11101000
    flags = 0010_1100
    reg[ff] = e8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe8]
    00 = mem[ffe8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffe9]
    00 = mem[ffe9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffea]
    00 = mem[ffea]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffeb]
    00 = mem[ffeb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffec]
    00 = mem[ffec]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffed]
    00 = mem[ffed]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffee]
    00 = mem[ffee]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffef]
    00 = mem[ffef]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 02

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff0]
    00 = mem[fff0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff1]
    00 = mem[fff1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff2]
    00 = mem[fff2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff3]
    00 = mem[fff3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff4]
    00 = mem[fff4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff5]
    00 = mem[fff5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff6]
    00 = mem[fff6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff7]
    00 = mem[fff7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f8       08    =>    f0
         11111000 00001000 => 11110000
    flags = 0010_1000
    reg[ff] = f0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff0]
    00 = mem[fff0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff1]
    00 = mem[fff1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff2]
    00 = mem[fff2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff3]
    00 = mem[fff3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff4]
    00 = mem[fff4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff5]
    00 = mem[fff5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff6]
    00 = mem[fff6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff7]
    00 = mem[fff7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 0010_1000
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    f8       08    =>    f0
         11111000 00001000 => 11110000
    flags = 0010_1000
    reg[ff] = f0
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    ff       00    =>    ff
         11111111 00000000 => 11111111
    flags = 0010_1000
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff0]
    00 = mem[fff0]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff1]
    00 = mem[fff1]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff2]
    00 = mem[fff2]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff3]
    00 = mem[fff3]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff4]
    00 = mem[fff4]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff5]
    00 = mem[fff5]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff6]
    00 = mem[fff6]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff7]
    00 = mem[fff7]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 0100_1000
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 01

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 0010_1000
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 0100_1000
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 0100_1000
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff8]
    00 = mem[fff8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff9]
    00 = mem[fff9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffa]
    00 = mem[fffa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffb]
    00 = mem[fffb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffc]
    00 = mem[fffc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffd]
    00 = mem[fffd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffe]
    00 = mem[fffe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffff]
    00 = mem[ffff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fd       3f    =>    fe
         11111101 00111111 => 11111110
    flags = 0010_1000
    reg[55] = fe

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    00       08    =>    f8
         00000000 00001000 => 11111000
    flags = 1011_1100
    reg[ff] = f8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 1011_1100
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 1101_1100
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 1010_1100
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 1100_1100
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 1100_1100
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 1100_1100
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff8]
    00 = mem[fff8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff9]
    00 = mem[fff9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffa]
    00 = mem[fffa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffb]
    00 = mem[fffb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffc]
    00 = mem[fffc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffd]
    00 = mem[fffd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffe]
    00 = mem[fffe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffff]
    00 = mem[ffff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    fe       3f    =>    ff
         11111110 00111111 => 11111111
    flags = 1010_1100
    reg[55] = ff

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0051: read 1st byte 26
0052: read 2nd byte ff
0053: read 3rd byte 08
  26 ff 08
    sub ff, #08

0054: read 1st byte 36
    alu:    00       08    =>    f8
         00000000 00001000 => 11111000
    flags = 1011_1100
    reg[ff] = f8
0055: read 2nd byte fe
0056: read 3rd byte 00
  36 fe 00
    sbc fe, #00

0057: read 1st byte 8b
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 1011_1100
    reg[fe] = ff
0058: read 2nd byte c4
  8b c4
    jr    , c4

001d: read 1st byte f0
001e: read 2nd byte 80
  f0 80
   swap 80
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 1101_1100
    reg[80] = 00

001f: read 1st byte 46
0020: read 2nd byte 03
0021: read 3rd byte 80
  46 03 80
     or 03, #80

0022: read 1st byte 56
LH on port37 expected
    alu:    00       80    =>    80
         00000000 10000000 => 10000000
    flags = 1010_1100
    reg[03] = 80
0023: read 2nd byte 03
0024: read 3rd byte 7f
  56 03 7f
    and 03, #7f

0025: read 1st byte 76
HL on port37 expected
    alu:    80       7f    =>    00
         10000000 01111111 => 00000000
    flags = 1100_1100
    reg[03] = 00
0026: read 2nd byte 6d
0027: read 3rd byte 80
  76 6d 80
     tm 6d, #80

0028: read 1st byte 6b
    alu:    00       80    =>    00
         00000000 10000000 => 00000000
    flags = 1100_1100
0029: read 2nd byte 05
  6b 05
    jr   z, 05

002f: read 1st byte 56
0030: read 2nd byte 03
0031: read 3rd byte 3f
  56 03 3f
    and 03, #3f

0032: read 1st byte 0b
    alu:    00       3f    =>    00
         00000000 00111111 => 00000000
    flags = 1100_1100
    reg[03] = 00
0033: read 2nd byte fe
  0b fe
    jr   f, fe

0034: read 1st byte 0b
0035: read 2nd byte fe
  0b fe
    jr   f, fe

0036: read 1st byte ff
0037: read 2nd byte 50
  ff
    nop

0037: read 1st byte 50
0038: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff8]
    00 = mem[fff8]
    reg[80] = 00

0039: read 1st byte ff
003a: read 2nd byte 50
  ff
    nop

003a: read 1st byte 50
003b: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fff9]
    00 = mem[fff9]
    reg[80] = 00

003c: read 1st byte ff
003d: read 2nd byte 50
  ff
    nop

003d: read 1st byte 50
003e: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffa]
    00 = mem[fffa]
    reg[80] = 00

003f: read 1st byte ff
0040: read 2nd byte 50
  ff
    nop

0040: read 1st byte 50
0041: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffb]
    00 = mem[fffb]
    reg[80] = 00

0042: read 1st byte ff
0043: read 2nd byte 50
  ff
    nop

0043: read 1st byte 50
0044: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffc]
    00 = mem[fffc]
    reg[80] = 00

0045: read 1st byte ff
0046: read 2nd byte 50
  ff
    nop

0046: read 1st byte 50
0047: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffd]
    00 = mem[fffd]
    reg[80] = 00

0048: read 1st byte ff
0049: read 2nd byte 50
  ff
    nop

0049: read 1st byte 50
004a: read 2nd byte 80
  50 80
    pop 80
    00 = mem[fffe]
    00 = mem[fffe]
    reg[80] = 00

004b: read 1st byte ff
004c: read 2nd byte 50
  ff
    nop

004c: read 1st byte 50
004d: read 2nd byte 80
  50 80
    pop 80
    00 = mem[ffff]
    00 = mem[ffff]
    reg[80] = 00

004e: read 1st byte 5e
004f: read 2nd byte 6b
  5e
    inc r5
    alu:    ff       3f    =>    00
         11111111 00111111 => 00000000
    flags = 1100_1100
    reg[55] = 00

004f: read 1st byte 6b
0050: read 2nd byte 08
  6b 08
    jr   z, 08

0059: read 1st byte 5c
005a: read 2nd byte fd
  5c fd
    ld r5, #fd
    reg[55] = fd

005b: read 1st byte ff
005c: read 2nd byte ff
  ff
    nop

005c: read 1st byte ff
005d: read 2nd byte 4a
  ff
    nop

005d: read 1st byte 4a
005e: read 2nd byte be
  4a be
    djnz r4, be
    reg[54] = 00

005f: read 1st byte 8d
0060: read 2nd byte 00
0061: read 3rd byte 0c
  8d 00 0c
    jp    , 000c

000c: read 1st byte 31
000d: read 2nd byte 50
  31 50
    srp 50
    reg[fd] = 50

000e: read 1st byte e6
000f: read 2nd byte f8
testSoC_tiny: SUCCESS
