VCD info: dumpfile SoC.vcd opened for output.

000c: read 1st byte 31
000d: read 2nd byte 10
  31 10
    srp 10
    reg[fd] = 10
exact  6 cycles

000e: read 1st byte 0c
000f: read 2nd byte 09
  0c 09
    ld r0, #09
    reg[10] = 09
exact  6 cycles

0010: read 1st byte 0e
  0e
    inc r0
    alu:    09       00    =>    0a
         00001001 00000000 => 00001010
    flags = 0000_0000
    reg[10] = 0a
 5 cycles, expected  6

0011: read 1st byte 00
0012: read 2nd byte 10
  00 10
    dec 10
    alu:    0a       00    =>    09
         00001010 00000000 => 00001001
    flags = 0000_0000
    reg[10] = 09
exact  6 cycles

0013: read 1st byte 0c
0014: read 2nd byte 7f
  0c 7f
    ld r0, #7f
    reg[10] = 7f
exact  6 cycles

0015: read 1st byte 20
0016: read 2nd byte 10
  20 10
    inc 10
    alu:    7f       00    =>    80
         01111111 00000000 => 10000000
    flags = 0011_0000
    reg[10] = 80
exact  6 cycles

0017: read 1st byte 00
0018: read 2nd byte 10
  00 10
    dec 10
    alu:    80       00    =>    7f
         10000000 00000000 => 01111111
    flags = 0001_0000
    reg[10] = 7f
exact  6 cycles

0019: read 1st byte 0c
001a: read 2nd byte fe
  0c fe
    ld r0, #fe
    reg[10] = fe
exact  6 cycles

001b: read 1st byte 20
001c: read 2nd byte 10
  20 10
    inc 10
    alu:    fe       00    =>    ff
         11111110 00000000 => 11111111
    flags = 0010_0000
    reg[10] = ff
exact  6 cycles

001d: read 1st byte 20
001e: read 2nd byte e0
  20 e0
    inc e0
    alu:    ff       00    =>    00
         11111111 00000000 => 00000000
    flags = 0100_0000
    reg[10] = 00
exact  6 cycles

001f: read 1st byte 00
0020: read 2nd byte e0
  00 e0
    dec e0
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 0010_0000
    reg[10] = ff
exact  6 cycles

0021: read 1st byte 00
0022: read 2nd byte 10
  00 10
    dec 10
    alu:    ff       00    =>    fe
         11111111 00000000 => 11111110
    flags = 0010_0000
    reg[10] = fe
exact  6 cycles

0023: read 1st byte 1c
0024: read 2nd byte 10
  1c 10
    ld r1, #10
    reg[11] = 10
exact  6 cycles

0025: read 1st byte 01
0026: read 2nd byte e1
  01 e1
    dec @e1
    alu:    fe       00    =>    fd
         11111110 00000000 => 11111101
    flags = 0010_0000
    reg[10] = fd
exact  6 cycles

0027: read 1st byte 8d
0028: read 2nd byte 00
0029: read 3rd byte 0c
  8d 00 0c
    jp    , 000c
10 cycles, expected 12
testSoC: SUCCESS
