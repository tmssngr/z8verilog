VCD info: dumpfile SoC.vcd opened for output.

000c: read 1st byte 31
000d: read 2nd byte 20
  31 20
    srp 20
    reg[fd] = 20

000e: read 1st byte 0c
exact  6 cycles
000f: read 2nd byte 09
  0c 09
    ld r0, #09
    reg[20] = 09

0010: read 1st byte 1c
exact  6 cycles
0011: read 2nd byte 01
  1c 01
    ld r1, #01
    reg[21] = 01

0012: read 1st byte 02
exact  6 cycles
0013: read 2nd byte 01
  02 01
    add r0, r1

0014: read 1st byte 1c
    alu:    09       01    =>    0a
         00001001 00000001 => 00001010
    flags = 0000_0000
    reg[20] = 0a
exact  6 cycles
0015: read 2nd byte 06
  1c 06
    ld r1, #06
    reg[21] = 06

0016: read 1st byte 02
exact  6 cycles
0017: read 2nd byte 01
  02 01
    add r0, r1

0018: read 1st byte 1c
    alu:    0a       06    =>    10
         00001010 00000110 => 00010000
    flags = 0000_0100
    reg[20] = 10
exact  6 cycles
0019: read 2nd byte 80
  1c 80
    ld r1, #80
    reg[21] = 80

001a: read 1st byte 02
exact  6 cycles
001b: read 2nd byte 01
  02 01
    add r0, r1

001c: read 1st byte 1c
    alu:    10       80    =>    90
         00010000 10000000 => 10010000
    flags = 0010_0000
    reg[20] = 90
exact  6 cycles
001d: read 2nd byte 70
  1c 70
    ld r1, #70
    reg[21] = 70

001e: read 1st byte 04
exact  6 cycles
001f: read 2nd byte e1
0020: read 3rd byte e0
  04 e1 e0
    add e0, e1

0021: read 1st byte 0c
    alu:    90       70    =>    00
         10010000 01110000 => 00000000
    flags = 1100_0000
    reg[20] = 00
exact 10 cycles
0022: read 2nd byte ff
  0c ff
    ld r0, #ff
    reg[20] = ff

0023: read 1st byte 1c
exact  6 cycles
0024: read 2nd byte ff
  1c ff
    ld r1, #ff
    reg[21] = ff

0025: read 1st byte 02
exact  6 cycles
0026: read 2nd byte 10
  02 10
    add r1, r0

0027: read 1st byte 0c
    alu:    ff       ff    =>    fe
         11111111 11111111 => 11111110
    flags = 1010_0100
    reg[21] = fe
exact  6 cycles
0028: read 2nd byte 2d
  0c 2d
    ld r0, #2d
    reg[20] = 2d

0029: read 1st byte 1c
exact  6 cycles
002a: read 2nd byte 38
  1c 38
    ld r1, #38
    reg[21] = 38

002b: read 1st byte 2c
exact  6 cycles
002c: read 2nd byte 20
  2c 20
    ld r2, #20
    reg[22] = 20

002d: read 1st byte 05
exact  6 cycles
002e: read 2nd byte e2
002f: read 3rd byte e1
  05 e2 e1
    add e1, @e2

0030: read 1st byte 07
    alu:    38       2d    =>    65
         00111000 00101101 => 01100101
    flags = 0000_0100
    reg[21] = 65
exact 10 cycles
0031: read 2nd byte e2
0032: read 3rd byte ff
  07 e2 ff
    add @e2, #ff

0033: read 1st byte 8d
    alu:    2d       ff    =>    2c
         00101101 11111111 => 00101100
    flags = 1000_0100
    reg[20] = 2c
exact 10 cycles
0034: read 2nd byte 00
0035: read 3rd byte 0c
  8d 00 0c
    jp    , 000c

000c: read 1st byte 31
exact 12 cycles
000d: read 2nd byte 20
testSoC: SUCCESS
